import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { useEffect, useState, useContext } from 'react';
import { AppProvider, AppContext } from './contexts/AppContext';
import BottomNav from './components/BottomNav';
import LoginScreen from './screens/LoginScreen';
import RegisterScreen from './screens/RegisterScreen';
import MarketScreen from './screens/MarketScreen';
import CreateOfferScreen from './screens/CreateOfferScreen';
import TradeDetailsScreen from './screens/TradeDetailsScreen';
import ProfileScreen from './screens/ProfileScreen';
import DashboardScreen from './screens/DashboardScreen';
import MyAssetsScreen from './screens/MyAssetsScreen';
import TransactionHistoryScreen from './screens/TransactionHistoryScreen';

function ProtectedRoute({ children }) {
  return (
    <AppContext.Consumer>
      {({ state }) => 
        state.isAuthenticated ? children : <Navigate to="/login" />
      }
    </AppContext.Consumer>
  );
}

function AppContent() {
  const [isTelegramWebApp, setIsTelegramWebApp] = useState(false);
  const { state } = useContext(AppContext);

  useEffect(() => {
    document.documentElement.classList.add('dark');

    // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      setIsTelegramWebApp(true);
      
      console.log('Telegram WebApp initialized:', {
        platform: tg.platform,
        viewportHeight: tg.viewportHeight,
        viewportStableHeight: tg.viewportStableHeight,
        isExpanded: tg.isExpanded
      });

      // üî¥ –í–ê–ñ–ù–û: –°–Ω–∞—á–∞–ª–∞ ready(), –ø–æ—Ç–æ–º expand()
      tg.ready(); // –°–æ–æ–±—â–∞–µ–º Telegram —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
      
      // üî¥ –û–°–ù–û–í–ù–û–ï: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
      tg.expand(); // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
      
      // üî¥ –ó–ê–ü–†–ï–¢ –°–í–û–†–ê–ß–ò–í–ê–ù–ò–Ø
      tg.disableVerticalSwipes(); // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–≤–∞–π–ø –≤–Ω–∏–∑
      
      // üî¥ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
      tg.enableClosingConfirmation(); // –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏

      // üî¥ –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ
      // tg.BackButton.hide(); // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥

      // üî¥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
      tg.onEvent('viewportChanged', (event) => {
        console.log('Viewport changed:', event);
        if (!event.isExpanded) {
          // –ï—Å–ª–∏ –æ–∫–Ω–æ —Å–≤–µ—Ä–Ω—É–ª–∏ - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
          setTimeout(() => {
            tg.expand();
          }, 50);
        }
      });

      // üî¥ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ - –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
      const checkViewport = setInterval(() => {
        if (!tg.isExpanded) {
          tg.expand();
        }
      }, 1000);

      // üî¥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
      tg.MainButton.setText('–ó–ê–ö–†–´–¢–¨');
      tg.MainButton.onClick(() => {
        if (confirm('–¢–æ—á–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?')) {
          tg.close();
        }
      });

      return () => {
        clearInterval(checkViewport);
      };
    }

    // ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã—Å–æ—Ç—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    const setAppHeight = () => {
      const docEl = document.documentElement;
      const vh = window.innerHeight * 0.01;
      docEl.style.setProperty('--vh', `${vh}px`);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É
      docEl.style.height = `${window.innerHeight}px`;
    };

    setAppHeight();
    window.addEventListener('resize', setAppHeight);
    window.addEventListener('orientationchange', setAppHeight);

    return () => {
      window.removeEventListener('resize', setAppHeight);
      window.removeEventListener('orientationchange', setAppHeight);
    };
  }, []);

  // üî¥ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã –ø—Ä–∏ —Å–º–µ–Ω–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
  useEffect(() => {
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      
      // –í—Å–µ–≥–¥–∞ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∏ –±–ª–æ–∫–∏—Ä—É–µ–º —Å–≤–∞–π–ø—ã
      setTimeout(() => {
        tg.expand();
        tg.disableVerticalSwipes();
      }, 100);
    }
  }, [window.location.pathname]); // –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü

  return (
    <Router>
      {/* ‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É */}
      <div 
        className="app-wrapper bg-primary text-white font-sans w-full"
        style={{ 
          minHeight: '100vh',
          height: '100vh',
          overflow: 'hidden'
        }}
      >
        <div 
          className="content-area w-full overflow-auto"
          style={{ 
            height: 'calc(100vh - 4rem)',
            paddingBottom: '4rem'
          }}
        >
          <Routes>
            <Route path="/login" element={<LoginScreen />} />
            <Route path="/register" element={<RegisterScreen />} />
            <Route path="/" element={<Navigate to="/login" />} />

            <Route
              path="/my-assets"
              element={<ProtectedRoute><MyAssetsScreen /></ProtectedRoute>}
            />
            <Route
              path="/market"
              element={<ProtectedRoute><MarketScreen /></ProtectedRoute>}
            />
            <Route
              path="/create-offer"
              element={<ProtectedRoute><CreateOfferScreen /></ProtectedRoute>}
            />
            <Route
              path="/trade-details/:id"
              element={<ProtectedRoute><TradeDetailsScreen /></ProtectedRoute>}
            />
            <Route
              path="/profile"
              element={<ProtectedRoute><ProfileScreen /></ProtectedRoute>}
            />
            <Route
              path="/dashboard"
              element={<ProtectedRoute><DashboardScreen /></ProtectedRoute>}
            />
            <Route
              path="/transaction-history"
              element={<ProtectedRoute><TransactionHistoryScreen /></ProtectedRoute>}
            />
          </Routes>
        </div>

        {/* BottomNav */}
        {state.isAuthenticated &&
          !['/login', '/register'].includes(window.location.pathname) && (
            <BottomNav />
          )}
      </div>
    </Router>
  );
}

function App() {
  return (
    <AppProvider>
      <AppContent />
    </AppProvider>
  );
}

export default App;