import { useEffect, useState, useContext } from 'react';
import { useNavigate } from 'react-router-dom';
import { AppContext } from '../contexts/AppContext';

export default function LoginScreen() {
  const { dispatch } = useContext(AppContext);
  const navigate = useNavigate();
  const [tgReady, setTgReady] = useState(false);

  useEffect(() => {
    // ‚úÖ –£–°–ò–õ–ï–ù–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø TELEGRAM WEBAPP
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      
      // –ì–æ—Ç–æ–≤–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      tg.ready();
      setTgReady(true);
      
      // üîí –ó–ê–ü–†–ï–¢ –°–í–û–†–ê–ß–ò–í–ê–ù–ò–Ø –ò –ü–û–õ–ù–û–≠–ö–†–ê–ù–ù–´–ô –†–ï–ñ–ò–ú
      tg.disableVerticalSwipes(); // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–≤–∞–π–ø –≤–Ω–∏–∑
      tg.expand(); // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
      
      // üîí –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –†–ê–ó–í–û–†–ê–ß–ò–í–ê–ù–ò–Ø
      setTimeout(() => tg.expand(), 100);
      setTimeout(() => tg.expand(), 500);
      
      // üîí –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ó–ê–ö–†–´–¢–ò–Ø
      tg.enableClosingConfirmation();
      
      console.log('üü¢ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –Ω–∞ LoginScreen');
      
      // üîí –ó–ê–©–ò–¢–ê –û–¢ –°–í–û–†–ê–ß–ò–í–ê–ù–ò–Ø –ü–†–ò –ò–ó–ú–ï–ù–ï–ù–ò–ò –†–ê–ó–ú–ï–†–ê
      tg.onEvent('viewportChanged', (event) => {
        if (!event.isExpanded) {
          setTimeout(() => tg.expand(), 50);
        }
      });
    }
  }, []);

  const handleTelegramLogin = () => {
    if (!tgReady) {
      alert('Telegram WebApp –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤');
      return;
    }

    const user = window.Telegram.WebApp.initDataUnsafe?.user;

    if (user) {
      // ‚úÖ –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø TELEGRAM
      const userData = {
        id: user.id,
        username: user.username || `user_${user.id}`,
        firstName: user.first_name,
        lastName: user.last_name,
        languageCode: user.language_code
      };
      
      console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
      
      dispatch({ 
        type: 'LOGIN', 
        payload: { 
          email: user.username || `user_${user.id}`,
          telegramData: userData
        } 
      });
      
      // üîí –û–ë–ù–û–í–õ–Ø–ï–ú –ó–ê–©–ò–¢–£ –ü–ï–†–ï–î –ü–ï–†–ï–•–û–î–û–ú
      if (window.Telegram?.WebApp) {
        window.Telegram.WebApp.expand();
        window.Telegram.WebApp.disableVerticalSwipes();
      }
      
      navigate('/my-assets');
    } else {
      console.error('‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã');
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Telegram. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  };

  const handleRegister = () => {
    // üîí –û–ë–ù–û–í–õ–Ø–ï–ú –ó–ê–©–ò–¢–£ –ü–ï–†–ï–î –ü–ï–†–ï–•–û–î–û–ú
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.expand();
      window.Telegram.WebApp.disableVerticalSwipes();
    }
    navigate('/register');
  };

  return (
    <div className="fixed inset-0 bg-[#0b1120] w-full h-full flex justify-center items-center px-4 sm:px-6 md:px-8">
      <div className="w-full max-w-sm p-6 sm:p-8 bg-[#24304a] rounded-2xl shadow-md text-center">
        <h1 className="text-2xl sm:text-3xl font-bold mb-6 text-white">
          –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram
        </h1>

        <button
          onClick={handleTelegramLogin}
          disabled={!tgReady}
          className={`w-full ${
            tgReady 
              ? 'bg-[#00a968] hover:bg-[#00c67a] cursor-pointer' 
              : 'bg-gray-600 cursor-not-allowed'
          } transition py-4 rounded-2xl font-bold text-white text-base mb-4`}
        >
          {tgReady ? '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram' : '–ó–∞–≥—Ä—É–∑–∫–∞...'}
        </button>

        <button
          onClick={handleRegister}
          className="w-full bg-gray-700 hover:bg-gray-600 transition py-3 rounded-2xl font-semibold text-white text-base"
        >
          –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        </button>
      </div>
    </div>
  );
}