import { useEffect, useState, useContext } from 'react';
import { useNavigate } from 'react-router-dom';
import { AppContext } from '../contexts/AppContext';

export default function LoginScreen() {
  const { dispatch } = useContext(AppContext);
  const navigate = useNavigate();
  const [tgReady, setTgReady] = useState(false);

  useEffect(() => {
    // ‚úÖ –ü–û–õ–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –î–õ–Ø –°–ö–†–´–¢–ò–Ø –®–ê–ü–ö–ò –ò –ü–û–õ–ù–û–ì–û –≠–ö–†–ê–ù–ê
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      
      console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp...');
      
      // 1. –°–Ω–∞—á–∞–ª–∞ –≥–æ—Ç–æ–≤–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      tg.ready();
      setTgReady(true);
      
      // 2. ‚úÖ –°–ö–†–´–í–ê–ï–ú –í–°–Æ –®–ê–ü–ö–£ TELEGRAM (–í–ö–õ–Æ–ß–ê–Ø "MysteryDrop")
      tg.disableVerticalSwipes();
      
      // 3. ‚úÖ –û–°–ù–û–í–ù–û–ï: –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –†–ê–ó–í–û–†–ê–ß–ò–í–ê–ù–ò–ï
      tg.expand();
      
      // 4. ‚úÖ –°–ö–†–´–í–ê–ï–ú HEADER –ö–û–ú–ü–ê–ö–¢–ù–û–ì–û –†–ï–ñ–ò–ú–ê
      // –≠—Ç–∏ –º–µ—Ç–æ–¥—ã —Å–∫—Ä—ã–≤–∞—é—Ç —à–∞–ø–∫—É "MysteryDrop"
      tg.setHeaderColor('bg_color'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞
      tg.setBackgroundColor('#0b1120'); // –¢–æ—Ç –∂–µ —Ü–≤–µ—Ç —á—Ç–æ –∏ —É —Ç–≤–æ–µ–≥–æ —Ñ–æ–Ω–∞
      
      console.log('üìä –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', {
        isExpanded: tg.isExpanded,
        platform: tg.platform,
        headerColor: tg.headerColor,
        backgroundColor: tg.backgroundColor
      });
      
      // 5. ‚úÖ –ê–ì–†–ï–°–°–ò–í–ù–û–ï –†–ê–ó–í–û–†–ê–ß–ò–í–ê–ù–ò–ï - –ú–ù–û–ì–û–ö–†–ê–¢–ù–û –í–´–ó–´–í–ê–ï–ú
      const expandTimes = [50, 100, 150, 200, 300, 500, 800, 1000, 1500, 2000];
      expandTimes.forEach(delay => {
        setTimeout(() => {
          tg.expand();
          console.log(`üîÑ –í—ã–∑–æ–≤ expand() —á–µ—Ä–µ–∑ ${delay}ms`);
        }, delay);
      });
      
      // 6. ‚úÖ –ü–û–°–¢–û–Ø–ù–ù–´–ô –ö–û–ù–¢–†–û–õ–¨ - –ï–°–õ–ò –°–í–ï–†–ù–£–õ–ò, –°–†–ê–ó–£ –†–ê–ó–í–û–†–ê–ß–ò–í–ê–ï–ú
      const expandInterval = setInterval(() => {
        if (!tg.isExpanded) {
          console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—é');
          tg.expand();
          tg.disableVerticalSwipes();
        }
      }, 300);

      // 7. ‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô –†–ê–ó–ú–ï–†–ê –û–ö–ù–ê
      const handleViewportChange = (event) => {
        console.log('üîÑ Viewport –∏–∑–º–µ–Ω–µ–Ω:', event);
        if (!event.isExpanded) {
          setTimeout(() => {
            tg.expand();
            tg.disableVerticalSwipes();
          }, 10);
        }
      };
      
      tg.onEvent('viewportChanged', handleViewportChange);

      return () => {
        clearInterval(expandInterval);
        tg.offEvent('viewportChanged', handleViewportChange);
      };
    } else {
      console.log('üåê –†–∞–±–æ—Ç–∞–µ–º –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
    }
  }, []);

  const handleTelegramLogin = () => {
    if (!tgReady) {
      alert('Telegram WebApp –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤');
      return;
    }

    const user = window.Telegram.WebApp.initDataUnsafe?.user;

    if (user) {
      const userData = {
        id: user.id,
        username: user.username || `user_${user.id}`,
        firstName: user.first_name,
        lastName: user.last_name
      };
      
      console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
      
      dispatch({ 
        type: 'LOGIN', 
        payload: { 
          email: user.username || `user_${user.id}`,
          telegramData: userData
        } 
      });
      
      // ‚úÖ –û–ë–ù–û–í–õ–Ø–ï–ú –ó–ê–©–ò–¢–£ –ü–ï–†–ï–î –ü–ï–†–ï–•–û–î–û–ú
      if (window.Telegram?.WebApp) {
        const tg = window.Telegram.WebApp;
        tg.expand();
        tg.disableVerticalSwipes();
      }
      
      navigate('/my-assets');
    } else {
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Telegram. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  };

  const handleRegister = () => {
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      tg.expand();
      tg.disableVerticalSwipes();
    }
    navigate('/register');
  };

  return (
    <div 
      className="fixed inset-0 bg-[#0b1120] w-full h-full flex justify-center items-center px-4 sm:px-6 md:px-8"
      style={{ 
        // ‚úÖ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ó–ê–î–ê–ï–ú –í–´–°–û–¢–£
        height: '100vh',
        minHeight: '100vh'
      }}
    >
      <div className="w-full max-w-sm p-6 sm:p-8 bg-[#24304a] rounded-2xl shadow-md text-center">
        <h1 className="text-2xl sm:text-3xl font-bold mb-6 text-white">
          –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram
        </h1>

        <button
          onClick={handleTelegramLogin}
          disabled={!tgReady}
          className={`w-full ${
            tgReady 
              ? 'bg-[#00a968] hover:bg-[#00c67a] cursor-pointer' 
              : 'bg-gray-600 cursor-not-allowed'
          } transition py-4 rounded-2xl font-bold text-white text-base mb-4`}
        >
          {tgReady ? '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram' : '–ó–∞–≥—Ä—É–∑–∫–∞...'}
        </button>

        <button
          onClick={handleRegister}
          className="w-full bg-gray-700 hover:bg-gray-600 transition py-3 rounded-2xl font-semibold text-white text-base"
        >
          –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        </button>

        {/* üîß –ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø –û–¢–õ–ê–î–ö–ò */}
        {process.env.NODE_ENV === 'development' && window.Telegram?.WebApp && (
          <div className="mt-4 p-2 bg-gray-800 rounded text-xs text-left text-white">
            <div><strong>–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong></div>
            <div>Telegram Ready: {tgReady ? '‚úÖ' : '‚ùå'}</div>
            <div>Expanded: {window.Telegram.WebApp.isExpanded ? '‚úÖ' : '‚ùå'}</div>
            <div>Platform: {window.Telegram.WebApp.platform}</div>
            <div>Version: {window.Telegram.WebApp.version}</div>
          </div>
        )}
      </div>
    </div>
  );
}